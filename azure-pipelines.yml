trigger:
  - main

pool:
  name: Self Hosted
  demands:
    - agent.name -equals DESKTOP-F638SF0

steps:
  - checkout: self

  - script: |
      cd backend
      npm install --legacy-peer-deps
      cd ../frontend
      npm install --legacy-peer-deps
    displayName: 'Install Dependencies'

  # Build backend code and generate artifact
  - script: |
      cd backend
      npm run prepare
      cd ..
      tar -czvf backend.tar.gz backend
    displayName: 'Build Backend and Create Archive'

  - script: |
      cd frontend
      where.exe react-scripts || npm install react-scripts --save-dev
    displayName: 'Ensure react-scripts is installed'

  - script: |
      cd frontend
      echo "Current directory: %CD%"
      dir
      dir node_modules\.bin
    displayName: 'Debug Node Modules'

  - script: |
      cd frontend
      npx react-scripts build
    displayName: 'Build React App'

  - task: ArchiveFiles@2
    displayName: 'Archive Files'
    inputs:
      rootFolderOrFile: 'frontend\build'
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)\$(Build.BuildId).zip'
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'drop'
      publishLocation: 'container'

  - task: AzureWebApp@1
    displayName: 'Deploy to Azure Web App'
    inputs:
      azureSubscription: 'MyAzureSubscription'
      appName: 'swear-jar-app'
      package: '$(Build.ArtifactStagingDirectory)\**\*.zip'
      appType: 'webApp'

# Deploy Back end
  - task: AzureWebApp@1
    displayName: 'Deploy Backend API Azure App Services'
    inputs: # must match the above and be precise
      azureSubscription: 'MyAzureSubscription'
      appName: 'swear-jar-app-backend' # make sure the web app matches to backend
      package: '$(Build.ArtifactStagingDirectory)/backend-artifact/**.zip' # this is important
      appType: webApp # make the approprate choice